// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/apartmentlines/mattermost-plugin-poor-mans-scheduled-messages/internal/ports (interfaces: ChannelDataService)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/mattermost/mattermost/server/public/model"
)

// MockChannelDataService is a mock of ChannelDataService interface.
type MockChannelDataService struct {
	ctrl     *gomock.Controller
	recorder *MockChannelDataServiceMockRecorder
}

// MockChannelDataServiceMockRecorder is the mock recorder for MockChannelDataService.
type MockChannelDataServiceMockRecorder struct {
	mock *MockChannelDataService
}

// NewMockChannelDataService creates a new mock instance.
func NewMockChannelDataService(ctrl *gomock.Controller) *MockChannelDataService {
	mock := &MockChannelDataService{ctrl: ctrl}
	mock.recorder = &MockChannelDataServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChannelDataService) EXPECT() *MockChannelDataServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockChannelDataService) Get(arg0 string) (*model.Channel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*model.Channel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockChannelDataServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockChannelDataService)(nil).Get), arg0)
}

// ListMembers mocks base method.
func (m *MockChannelDataService) ListMembers(arg0 string, arg1, arg2 int) ([]*model.ChannelMember, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMembers", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*model.ChannelMember)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMembers indicates an expected call of ListMembers.
func (mr *MockChannelDataServiceMockRecorder) ListMembers(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMembers", reflect.TypeOf((*MockChannelDataService)(nil).ListMembers), arg0, arg1, arg2)
}
