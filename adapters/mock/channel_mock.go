// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/apartmentlines/mattermost-plugin-poor-mans-scheduled-messages/internal/ports (interfaces: ChannelService)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	ports "github.com/apartmentlines/mattermost-plugin-poor-mans-scheduled-messages/internal/ports"
	gomock "github.com/golang/mock/gomock"
)

// MockChannelService is a mock of ChannelService interface.
type MockChannelService struct {
	ctrl     *gomock.Controller
	recorder *MockChannelServiceMockRecorder
}

// MockChannelServiceMockRecorder is the mock recorder for MockChannelService.
type MockChannelServiceMockRecorder struct {
	mock *MockChannelService
}

// NewMockChannelService creates a new mock instance.
func NewMockChannelService(ctrl *gomock.Controller) *MockChannelService {
	mock := &MockChannelService{ctrl: ctrl}
	mock.recorder = &MockChannelServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChannelService) EXPECT() *MockChannelServiceMockRecorder {
	return m.recorder
}

// GetInfoOrUnknown mocks base method.
func (m *MockChannelService) GetInfoOrUnknown(arg0 string) *ports.ChannelInfo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfoOrUnknown", arg0)
	ret0, _ := ret[0].(*ports.ChannelInfo)
	return ret0
}

// GetInfoOrUnknown indicates an expected call of GetInfoOrUnknown.
func (mr *MockChannelServiceMockRecorder) GetInfoOrUnknown(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfoOrUnknown", reflect.TypeOf((*MockChannelService)(nil).GetInfoOrUnknown), arg0)
}

// MakeChannelLink mocks base method.
func (m *MockChannelService) MakeChannelLink(arg0 *ports.ChannelInfo) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeChannelLink", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// MakeChannelLink indicates an expected call of MakeChannelLink.
func (mr *MockChannelServiceMockRecorder) MakeChannelLink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeChannelLink", reflect.TypeOf((*MockChannelService)(nil).MakeChannelLink), arg0)
}
